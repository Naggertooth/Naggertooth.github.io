{"version":3,"sources":["webpack:///./src/components/common/Table/Table.js"],"names":["connectedTable","connect","state","ownProps","table","tables","tableName","dispatch","connectTable","name","url","pages","sort","order","perPage","actions","default","getTable","_ref","columns","tableUrl","_useState","useState","loading","setLoading","_useState2","data","setData","_useState3","setPages","useEffect","result","defaultProps","showPagination","resizable","defaultPageSize","pageSizeOptions","manual","onFetchData","_onFetchData","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","sortArgs","wrap","_context","prev","next","sorted","id","desc","undefined","apply","page","concat","pageSize","stop","_x","this","arguments","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","react_table__WEBPACK_IMPORTED_MODULE_5__","Object","assign"],"mappings":"iMA4DMA,UAAiBC,YACnB,SAACC,EAAOC,GAAR,MAAsB,CAClBC,MAAOF,EAAMG,OAAOF,EAASG,aAEjC,SAAAC,GAAQ,MAAK,CACTC,aAAc,SAACC,EAAMC,EAAKC,EAAOC,EAAMC,EAAOC,GAAhC,OACVP,EAASQ,IAAqBC,QAAQC,SAASR,EAAMC,EAAKC,EAAOC,EAAMC,EAAOC,OANnEb,CApDT,SAAAiB,GAER,IADFC,EACED,EADFC,QAASb,EACPY,EADOZ,UAAWc,EAClBF,EADkBE,SAAUhB,EAC5Bc,EAD4Bd,MAAOI,EACnCU,EADmCV,aACnCa,EAC4BC,oBAAS,GAAhCC,EADLF,EAAA,GACcG,EADdH,EAAA,GAAAI,EAEsBH,mBAAS,IAA1BI,EAFLD,EAAA,GAEWE,EAFXF,EAAA,GAAAG,EAGwBN,oBAAU,GAA7BX,EAHLiB,EAAA,GAGYC,EAHZD,EAAA,GAKFE,oBAAU,gBACe,IAAV1B,QAA+C,IAAfA,EAAMsB,OAC7CC,EAAQvB,EAAMsB,KAAKK,QACnBF,EAASzB,EAAMsB,KAAKf,OACpBa,GAAW,KAEhB,CAACpB,IAEJ,IAAM4B,EAAe,CACjBC,gBAAgB,EAChBC,WAAW,EAEXC,gBAAiB,EACjBC,gBAAiB,CAAC,EAAG,GAAI,GAAI,KAE7BV,OACAf,QACAY,UACAc,QAAQ,EACRC,aAAWC,EAAAC,IAAAC,EAAAC,EAAAC,KAAE,SAAAC,EAAO1C,GAAP,IAAA2C,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTzB,GAAW,GACLqB,EAAW3C,EAAMgD,OAAO,GACxB,CACEhD,EAAMgD,OAAO,GAAGC,GAChBjD,EAAMgD,OAAO,GAAGE,MAAQ,EAAI,GAE9B,MAACC,OAAWA,GAClB7C,EAAY8C,WAAZ,GACIhD,EACAc,EACAlB,EAAMqD,KAAO,GAHjBC,OAIOX,EAJP,CAKI3C,EAAMuD,YAbD,wBAAAV,EAAAW,SAAAd,MAAF,SAAAe,GAAA,OAAApB,EAAAe,MAAAM,KAAAC,cAAA,IAAAtB,EAkBf,OACIuB,EAAApB,EAAAqB,cAACC,EAAA,EAADC,OAAAC,OAAA,CACI/C,QAASA,GACLa,OAeDhC","file":"18-e1110fc5ddd40c311c06.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactTable from 'react-table'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../redux/actions'\n\nimport './Table.scss'\n\nconst Table = ({\n    columns, tableName, tableUrl, table, connectTable,\n}) => {\n    const [loading, setLoading] = useState(true)\n    const [data, setData] = useState([])\n    const [pages, setPages] = useState(-1)\n\n    useEffect(() => {\n        if (typeof table !== 'undefined' && typeof table.data !== 'undefined') {\n            setData(table.data.result)\n            setPages(table.data.pages)\n            setLoading(false)\n        }\n    }, [table])\n\n    const defaultProps = {\n        showPagination: true,\n        resizable: true,\n        // showPageSizeOptions: false,\n        defaultPageSize: 5,\n        pageSizeOptions: [5, 20, 50, 100],\n\n        data,\n        pages,\n        loading,\n        manual: true, // this would indicate that server side pagination has been enabled\n        onFetchData: async (state) => {\n            setLoading(true)\n            const sortArgs = state.sorted[0]\n                ? [\n                    state.sorted[0].id,\n                    state.sorted[0].desc ? -1 : 1,\n                ]\n                : [undefined, undefined]\n            connectTable(\n                tableName,\n                tableUrl,\n                state.page + 1,\n                ...sortArgs,\n                state.pageSize,\n            )\n        },\n    }\n\n    return (\n        <ReactTable\n            columns={columns}\n            {...defaultProps}\n        />\n    )\n}\n\nconst connectedTable = connect(\n    (state, ownProps) => ({\n        table: state.tables[ownProps.tableName],\n    }),\n    dispatch => ({\n        connectTable: (name, url, pages, sort, order, perPage) =>\n            dispatch(actions.TableActions.default.getTable(name, url, pages, sort, order, perPage)),\n    }),\n)(Table)\n\nexport default connectedTable\n"],"sourceRoot":""}