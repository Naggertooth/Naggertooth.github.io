{"version":3,"sources":["webpack:///./src/assets/table.js","webpack:///./src/components/common/Table/index.js","webpack:///./src/pages/briefcase.js","webpack:///./src/components/layouts/StandartPageLayout/index.js","webpack:///./src/images/svgs/chevronDown.inline.svg","webpack:///./src/components/common/Loader/index.js","webpack:///./src/components/common/Graph/index.js"],"names":["table","firstName","lastName","age","visits","progress","status","Table","react_default","a","createElement","es","Object","assign","data","tableData","columns","Header","accessor","showPagination","sortable","resizable","showPageSizeOptions","defaultPageSize","BriefcasePage","_ref","location","Layout","Seo","title","keywords","StandartPageLayout","Graph","common_Table","children","pathname","mainPath","split","mobSelectedTab","state","selectedPage","LinksMenu","helpers","constants","links","myPage","find","item","link","header","icon","navTabs","react__WEBPACK_IMPORTED_MODULE_3___default","className","styles","page","desktop","page__title","cx","page__tabs","tabs","map","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","tab","tab_active","key","text","mobile","mobTabs","_ref3","mobTab","type","name","id","defaultChecked","mobTab__title","openedManually","htmlFor","onClick","e","setTimeout","navigate","target","classList","add","_images_svgs_chevronDown_inline_svg__WEBPACK_IMPORTED_MODULE_8___default","mobTab__content","mobTab__contentContainer","React","__webpack_require__","ChevronDownInline","props","d","fill","defaultProps","width","height","viewBox","module","exports","default","__webpack_exports__","Loader","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Loader_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Loader_module_scss__WEBPACK_IMPORTED_MODULE_1___default","loader","react_loadable__WEBPACK_IMPORTED_MODULE_1__","react_loadable__WEBPACK_IMPORTED_MODULE_1___default","_Graph_module_scss__WEBPACK_IMPORTED_MODULE_2__","_Graph_module_scss__WEBPACK_IMPORTED_MODULE_2___default","_Loader__WEBPACK_IMPORTED_MODULE_3__","LoadableGraph","Loadable","Promise","all","then","bind","loading","delay","GraphComponent","graph"],"mappings":"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","file":"component---src-pages-briefcase-js-dd766ada9c97e86888c5.js","sourcesContent":["const table = [\n    {\n        firstName: 'administration', lastName: 'screw', age: 26, visits: 17, progress: 39, status: 'relationship',\n    },\n    {\n        firstName: 'error', lastName: 'cactus', age: 5, visits: 12, progress: 57, status: 'single',\n    },\n    {\n        firstName: 'currency', lastName: 'surgery', age: 1, visits: 57, progress: 11, status: 'complicated',\n    },\n    {\n        firstName: 'grass', lastName: 'volleyball', age: 19, visits: 83, progress: 83, status: 'complicated',\n    },\n    {\n        firstName: 'club', lastName: 'imagination', age: 6, visits: 48, progress: 76, status: 'single',\n    },\n    {\n        firstName: 'pleasure', lastName: 'haircut', age: 10, visits: 39, progress: 65, status: 'complicated',\n    },\n    {\n        firstName: 'expansion', lastName: 'administration', age: 14, visits: 3, progress: 13, status: 'relationship',\n    },\n    {\n        firstName: 'bath', lastName: 'shoe', age: 9, visits: 95, progress: 70, status: 'complicated',\n    },\n    {\n        firstName: 'credit', lastName: 'president', age: 6, visits: 62, progress: 50, status: 'complicated',\n    },\n]\n\nexport default table\n","import React from 'react'\nimport ReactTable from 'react-table'\n\nimport tableData from '../../../assets/table'\n\n// import 'react-table/react-table.css'\nimport './Table.scss'\n\nconst Table = () => {\n    const columns = [\n        {\n            Header: 'firstName',\n            accessor: 'firstName', // String-based value accessors!\n        },\n        {\n            Header: 'lastName',\n            accessor: 'lastName', // String-based value accessors!\n        },\n        {\n            Header: 'age',\n            accessor: 'age', // String-based value accessors!\n        },\n        {\n            Header: 'visits',\n            accessor: 'visits', // String-based value accessors!\n        },\n        {\n            Header: 'firstName',\n            accessor: 'firstName', // String-based value accessors!\n        },\n        {\n            Header: 'lastName',\n            accessor: 'lastName', // String-based value accessors!\n        },\n        {\n            Header: 'age',\n            accessor: 'age', // String-based value accessors!\n        },\n        {\n            Header: 'visits',\n            accessor: 'visits', // String-based value accessors!\n        },\n    ]\n\n    const defaultProps = {\n        showPagination: true,\n        sortable: false,\n        resizable: false,\n        showPageSizeOptions: false,\n        defaultPageSize: 8,\n    }\n\n    return (\n        <ReactTable\n            data={tableData}\n            columns={columns}\n            {...defaultProps}\n        />\n    )\n}\n\nexport default Table\n\n/* eslint-disable max-len */\n// const columns = [{\n//     Header: 'Name',\n//     accessor: 'name' // String-based value accessors!\n// }, {\n//     Header: 'Age',\n//     accessor: 'age',\n//     Cell: props => <span className='number'>{props.value}</span> // Custom cell components!\n// }, {\n//     id: 'friendName', // Required because our accessor is not a string\n//     Header: 'Friend Name',\n//     accessor: d => d.friend.name // Custom value accessors!\n// }, {\n//     Header: props => <span>Friend Age</span>, // Custom header components!\n//     accessor: 'friend.age'\n// }]\n\n\n// const props = {\n//     // General\n//     data: [],\n//     resolveData: data => resolvedData,\n//     loading: false,\n//     showPagination: true,\n//     showPaginationTop: false,\n//     showPaginationBottom: true,\n//     showPageSizeOptions: true,\n//     pageSizeOptions: [5, 10, 20, 25, 50, 100],\n//     defaultPageSize: 20,\n//     minRows: undefined, // controls the minimum number of rows to display - default will be `pageSize`\n//     // NOTE: if you set minRows to 0 then you get rid of empty padding rows BUT your table formatting will also look strange when there are ZERO rows in the table\n//     showPageJump: true,\n//     collapseOnSortingChange: true,\n//     collapseOnPageChange: true,\n//     collapseOnDataChange: true,\n//     freezeWhenExpanded: false,\n//     sortable: true,\n//     multiSort: true,\n//     resizable: true,\n//     filterable: false,\n//     defaultSortDesc: false,\n//     defaultSorted: [],\n//     defaultFiltered: [],\n//     defaultResized: [],\n//     defaultExpanded: {},\n//     defaultFilterMethod: (filter, row, column) => {\n//         const id = filter.pivotId || filter.id\n//         return row[id] !== undefined ? String(row[id]).startsWith(filter.value) : true\n//     },\n//     defaultSortMethod: (a, b, desc) => {\n//         // force null and undefined to the bottom\n//         a = a === null || a === undefined ? '' : a\n//         b = b === null || b === undefined ? '' : b\n//         // force any string values to lowercase\n//         a = typeof a === 'string' ? a.toLowerCase() : a\n//         b = typeof b === 'string' ? b.toLowerCase() : b\n//         // Return either 1 or -1 to indicate a sort priority\n//         if (a > b) {\n//             return 1\n//         }\n//         if (a < b) {\n//             return -1\n//         }\n//         // returning 0, undefined or any falsey value will use subsequent sorts or\n//         // the index as a tiebreaker\n//         return 0\n//     },\n//     PadRowComponent: () => <span>&nbsp;</span>, // the content rendered inside of a padding row\n\n//     // Controlled State Overrides (see Fully Controlled Component section)\n//     page: undefined,\n//     pageSize: undefined,\n//     sorted: [],\n//     filtered: [],\n//     resized: [],\n//     expanded: {},\n\n//     // Controlled State Callbacks\n//     onPageChange: undefined,\n//     onPageSizeChange: undefined,\n//     onSortedChange: undefined,\n//     onFilteredChange: undefined,\n//     onResizedChange: undefined,\n//     onExpandedChange: undefined,\n\n//     // Pivoting\n//     pivotBy: undefined,\n\n//     // Key Constants\n//     pivotValKey: '_pivotVal',\n//     pivotIDKey: '_pivotID',\n//     subRowsKey: '_subRows',\n//     aggregatedKey: '_aggregated',\n//     nestingLevelKey: '_nestingLevel',\n//     originalKey: '_original',\n//     indexKey: '_index',\n//     groupedByPivotKey: '_groupedByPivot',\n\n//     // Server-side callbacks\n//     onFetchData: () => null,\n\n//     // Classes\n//     className: '',\n//     style: {},\n\n//     // Component decorators\n//     getProps: () => ({}),\n//     getTableProps: () => ({}),\n//     getTheadGroupProps: () => ({}),\n//     getTheadGroupTrProps: () => ({}),\n//     getTheadGroupThProps: () => ({}),\n//     getTheadProps: () => ({}),\n//     getTheadTrProps: () => ({}),\n//     getTheadThProps: () => ({}),\n//     getTheadFilterProps: () => ({}),\n//     getTheadFilterTrProps: () => ({}),\n//     getTheadFilterThProps: () => ({}),\n//     getTbodyProps: () => ({}),\n//     getTrGroupProps: () => ({}),\n//     getTrProps: () => ({}),\n//     getThProps: () => ({}),\n//     getTdProps: () => ({}),\n//     getTfootProps: () => ({}),\n//     getTfootTrProps: () => ({}),\n//     getTfootThProps: () => ({}),\n//     getPaginationProps: () => ({}),\n//     getLoadingProps: () => ({}),\n//     getNoDataProps: () => ({}),\n//     getResizerProps: () => ({}),\n\n//     // Custom pagination rendering\n//     renderPageJump: ({\n//  onChange, value, onBlur, onKeyPress, inputType, pageJumpText\n// }) => component,\n//     renderCurrentPage: page => component,\n//     renderTotalPagesCount: pages => component,\n//     renderPageSizeOptions: ({\n//         pageSize,\n//         pageSizeOptions,\n//         rowsSelectorText,\n//         onPageSizeChange,\n//         rowsText,\n//     }) => component,\n\n//     // Global Column Defaults\n//     // To override only some values, import { ReactTableDefaults } from 'react-table'\n//     // and construct your overrides (e.g. {...ReactTableDefaults.column, className: 'react-table-cell'})\n//     column: {\n//         // Renderers\n//         Cell: undefined,\n//         Header: undefined,\n//         Footer: undefined,\n//         Aggregated: undefined,\n//         Pivot: undefined,\n//         PivotValue: undefined,\n//         Expander: undefined,\n//         Filter: undefined,\n//         // Standard options\n//         sortable: undefined, // use table default\n//         resizable: undefined, // use table default\n//         filterable: undefined, // use table default\n//         show: true,\n//         minWidth: 100,\n//         // Cells only\n//         className: '',\n//         style: {},\n//         getProps: () => ({}),\n//         // Headers only\n//         headerClassName: '',\n//         headerStyle: {},\n//         getHeaderProps: () => ({}),\n//         // Footers only\n//         footerClassName: '',\n//         footerStyle: {},\n//         getFooterProps: () => ({}),\n//         filterAll: false,\n//         filterMethod: undefined,\n//         sortMethod: undefined,\n//         defaultSortDesc: undefined,\n//     },\n\n//     // Global Expander Column Defaults\n//     // To override only some values, import { ReactTableDefaults } from 'react-table'\n//     // and construct your overrides (e.g. {...ReactTableDefaults.expanderDefaults, sortable: true})\n//     expanderDefaults: {\n//         sortable: false,\n//         resizable: false,\n//         filterable: false,\n//         width: 35,\n//     },\n\n//     // Global Pivot Column Defaults\n//     pivotDefaults: {},\n\n//     // Text\n//     previousText: 'Previous',\n//     nextText: 'Next',\n//     loadingText: 'Loading...',\n//     noDataText: 'No rows found',\n//     pageText: 'Page',\n//     ofText: 'of',\n//     rowsText: 'rows',\n\n//     // Accessibility Labels\n//     pageJumpText: 'jump to page',\n//     rowsSelectorText: 'rows per page',\n// }\n","import React from 'react'\r\n\r\nimport Layout from '../components/layouts/Layout'\r\nimport StandartPageLayout from '../components/layouts/StandartPageLayout'\r\nimport SEO from '../components/Seo'\r\n\r\nimport Graph from '../components/common/Graph'\r\nimport Table from '../components/common/Table'\r\n\r\nconst BriefcasePage = ({ location }) => (\r\n    <Layout location={location}>\r\n        <SEO title=\"Портфель\" keywords={['gatsby', 'application', 'react']} />\r\n        <StandartPageLayout location={location}>\r\n            <Graph />\r\n            <Table />\r\n        </StandartPageLayout>\r\n    </Layout>\r\n)\r\n\r\nexport default BriefcasePage\r\n","import React from 'react'\nimport { Link, navigate } from 'gatsby'\nimport cx from 'classnames'\n\nimport styles from './StandartPage.module.scss'\n\nimport helpers from '../../../helpers'\n\nimport ArrDown from '../../../images/svgs/chevronDown.inline.svg'\n\n\nfunction StandartPageLayout({ children, location }) {\n    const pathname = location ? location.pathname : '/404/'\n    const mainPath = location ? `/${location.pathname.split('/')[1]}/` : '/404/'\n    const mobSelectedTab = location.state ? location.state.selectedPage : ''\n    const { LinksMenu } = helpers.constants.links\n    const myPage = LinksMenu.find(item => item.link === mainPath) || {\n        header: 'Not found',\n        icon: '',\n        link: '/404/',\n        navTabs: [],\n    }\n\n    return (\n        <div className={styles.page}>\n\n            <div className={styles.desktop}>\n\n                <h1 className={styles.page__title}>\n                    {myPage.icon}\n                    {myPage.header}\n                </h1>\n\n                {\n                    myPage.navTabs && (\n                        <nav className={cx([styles.page__tabs, styles.tabs])}>\n                            {myPage.navTabs.map(item => (\n                                <Link\n                                    to={item.link}\n                                    className={cx([\n                                        styles.tab,\n                                        {\n                                            [styles.tab_active]: pathname === item.link,\n                                        },\n                                    ])}\n                                    key={item.text}\n                                >\n                                    <span>{item.text}</span>\n                                </Link>\n                            ))}\n                        </nav>\n                    )\n                }\n\n                {children}\n\n            </div>\n\n            {/* Mobile starts here */}\n\n            <div className={styles.mobile}>\n\n                <nav className={styles.mobTabs}>\n                    {LinksMenu.map(item => (\n                        <div className={styles.mobTab} key={item.title}>\n                            <input type=\"radio\" name=\"mobileTabs\" id={item.link} defaultChecked={item.link === mobSelectedTab} />\n                            <label\n                                className={cx([\n                                    styles.mobTab__title,\n                                    {\n                                        [styles.openedManually]: item.link === mobSelectedTab,\n                                    },\n                                ])}\n                                htmlFor={item.link}\n                                onClick={e => (pathname !== item.link\n                                    ? setTimeout(() =>\n                                        navigate(item.link, {\n                                            state: {\n                                                selectedPage: item.link,\n                                            },\n                                        }), 300)\n                                    : e.target.classList.add(styles.openedManually)\n                                )}\n                            >\n                                {item.title}\n                                <ArrDown />\n                            </label>\n                            <div className={styles.mobTab__content}>\n                                <div className={styles.mobTab__contentContainer}>\n                                    {\n                                        pathname === item.link && children\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </nav>\n\n            </div>\n        </div>\n    )\n}\n\nexport default StandartPageLayout\n","var React = require('react');\n\nfunction ChevronDownInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M8.57101 8.67094L15.7637 1.47581C16.0787 1.16009 16.0787 0.648579 15.7637 0.332065C15.4488 0.0163472 14.9373 0.0163472 14.6224 0.332065L8.00037 6.95648L1.37834 0.332863C1.06342 0.0171461 0.551907 0.0171461 0.23619 0.332863C-0.0787304 0.648581 -0.0787304 1.16089 0.23619 1.47661L7.42886 8.67173C7.74052 8.9826 8.26007 8.9826 8.57101 8.67094Z\",\"fill\":\"#0B2248\"}));\n}\n\nChevronDownInline.defaultProps = {\"width\":\"16\",\"height\":\"9\",\"viewBox\":\"0 0 16 9\",\"fill\":\"none\"};\n\nmodule.exports = ChevronDownInline;\n\nChevronDownInline.default = ChevronDownInline;\n","import React from 'react'\nimport styles from './Loader.module.scss'\n\nexport default function Loader() {\n    return (\n        <div className={styles.loader}>Loading... </div>\n    )\n}\n","import React from 'react'\nimport Loadable from 'react-loadable'\n\nimport styles from './Graph.module.scss'\n\nimport Loader from '../Loader'\n\n\nconst LoadableGraph = Loadable({\n    loader: () => import('./graph'),\n    loading() {\n        return <Loader />\n    },\n    delay: 50,\n})\n\nconst GraphComponent = () => (\n    <div className={styles.graph}>\n        <LoadableGraph />\n    </div>\n)\n\nexport default GraphComponent\n"],"sourceRoot":""}