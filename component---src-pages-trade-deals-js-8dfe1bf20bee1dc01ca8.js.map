{"version":3,"sources":["webpack:///./src/pages/trade/deals.js","webpack:///./src/components/layouts/StandartPageLayout/index.js","webpack:///./src/images/svgs/chevronDown.inline.svg","webpack:///./src/components/common/Loader/index.js","webpack:///./src/components/common/Table/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_StandartPageLayout__WEBPACK_IMPORTED_MODULE_2__","_components_Seo__WEBPACK_IMPORTED_MODULE_3__","_components_common_Table__WEBPACK_IMPORTED_MODULE_4__","_components_common_Widgets_MainWidget__WEBPACK_IMPORTED_MODULE_5__","tableProps","columns","Header","accessor","minResizeWidth","tableUrl","helpers","api","GET_TRADES","tableName","defaultPageSize","BriefcasePage","_ref","location","a","createElement","title","keywords","mobile","StandartPageLayout","children","pathname","mainPath","split","mobSelectedTab","state","selectedPage","LinksMenu","constants","links","myPage","find","item","link","header","icon","navTabs","react__WEBPACK_IMPORTED_MODULE_3___default","className","styles","page","desktop","page__title","cx","page__tabs","tabs","map","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","tab","tab_active","key","text","mobTabs","_ref3","mobTab","type","name","id","defaultChecked","mobTab__title","openedManually","htmlFor","onClick","e","setTimeout","navigate","target","classList","add","_images_svgs_chevronDown_inline_svg__WEBPACK_IMPORTED_MODULE_8___default","mobTab__content","mobTab__contentContainer","React","ChevronDownInline","props","d","fill","defaultProps","width","height","viewBox","module","exports","default","Loader","_Loader_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Loader_module_scss__WEBPACK_IMPORTED_MODULE_1___default","loader","react_loadable__WEBPACK_IMPORTED_MODULE_1__","react_loadable__WEBPACK_IMPORTED_MODULE_1___default","_Loader__WEBPACK_IMPORTED_MODULE_2__","LoadableTable","Loadable","Promise","all","then","bind","loading","delay","TableComponent"],"mappings":"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","file":"component---src-pages-trade-deals-js-8dfe1bf20bee1dc01ca8.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../components/layouts/Layout'\nimport StandartPageLayout from '../../components/layouts/StandartPageLayout'\nimport SEO from '../../components/Seo'\n\nimport Table from '../../components/common/Table'\nimport MainWidget from '../../components/common/Widgets/MainWidget'\n\nimport helpers from '../../helpers'\n\nconst columns = [\n    {\n        Header: 'Торговый счет',\n        accessor: 'Account', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Комиссия брокера',\n        accessor: 'BrokerComission', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Код класса инструментов',\n        accessor: 'ClassCode', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    // {\n    //     Header: 'Код биржи',\n    //     accessor: 'ExchangeCode', // String-based value accessors!\n    //     minResizeWidth: 10,\n    // },\n    {\n        Header: 'Вид сделки',\n        accessor: 'Kind', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Текущий лимит',\n        accessor: 'LimAll', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    // {\n    //     Header: 'Входящий лимит',\n    //     accessor: 'OpenLimit', // String-based value accessors!\n    //     minResizeWidth: 10,\n    // },\n    {\n        Header: 'Направленность сделки',\n        accessor: 'Operation', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    // {\n    //     Header: 'Биржевой номер заявки',\n    //     accessor: 'OrderExchangeCode', // String-based value accessors!\n    //     minResizeWidth: 10,\n    // },\n    {\n        Header: 'Номер заявки',\n        accessor: 'OrderNum', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    // {\n    //     Header: 'Стоимость клиентского портфеля',\n    //     accessor: 'PortfolioValue', // String-based value accessors!\n    //     minResizeWidth: 10,\n    // },\n    {\n        Header: 'Цена сделки',\n        accessor: 'Price', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Количество бумаг в лотах',\n        accessor: 'Qty', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Количество бумаг в штуках',\n        accessor: 'Qty_pcs', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Набор битовых флагов',\n        accessor: 'RFlags', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Код инструмента',\n        accessor: 'SecCode', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    // {\n    //     Header: 'Валюта расчетов',\n    //     accessor: 'SettleCurrency', // String-based value accessors!\n    //     minResizeWidth: 10,\n    // },\n    {\n        Header: 'Комиссия торговой системы',\n        accessor: 'TSCommission', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Валюта бумаги',\n        accessor: 'TradeCurrency', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Дата торговой сессии',\n        accessor: 'TradeDate', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Дата и время сделки',\n        accessor: 'TradeDateTime', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    {\n        Header: 'Номер сделки',\n        accessor: 'TradeNum', // String-based value accessors!\n        minResizeWidth: 10,\n    },\n    // {\n    //     Header: 'Идентификатор пользователя',\n    //     accessor: 'UID', // String-based value accessors!\n    //     minResizeWidth: 10,\n    // },\n]\n\nconst tableProps = {\n    columns,\n    tableUrl: helpers.api.GET_TRADES,\n    tableName: 'Trades',\n    defaultPageSize: 20,\n}\n\nconst BriefcasePage = ({ location }) => (\n    <Layout location={location}>\n        <SEO title=\"Торговля\" keywords={['gatsby', 'application', 'react']} />\n        <StandartPageLayout location={location}>\n            <Table {...tableProps} />\n            <MainWidget location={location} mobile />\n        </StandartPageLayout>\n    </Layout>\n)\n\nexport default BriefcasePage\n","import React from 'react'\nimport { Link, navigate } from 'gatsby'\nimport cx from 'classnames'\n\nimport styles from './StandartPage.module.scss'\n\nimport helpers from '../../../helpers'\n\nimport ArrDown from '../../../images/svgs/chevronDown.inline.svg'\n\n\nfunction StandartPageLayout({ children, location }) {\n    const pathname = location ? location.pathname : '/404/'\n    const mainPath = location ? `/${location.pathname.split('/')[1]}/` : '/404/'\n    const mobSelectedTab = location.state ? location.state.selectedPage : ''\n    const { LinksMenu } = helpers.constants.links\n    const myPage = LinksMenu.find(item => item.link === mainPath)\n        || LinksMenu.find(item => `/${item.link.split('/')[1]}/` === mainPath)\n        || LinksMenu.find(item => item.link === pathname)\n        || {\n            header: 'Not found',\n            icon: '',\n            link: '/404/',\n            navTabs: [],\n        }\n\n    return (\n        <div className={styles.page}>\n\n            <div className={styles.desktop}>\n\n                <h1 className={styles.page__title}>\n                    {myPage.icon}\n                    {myPage.header}\n                </h1>\n\n                {\n                    myPage.navTabs && (\n                        <nav className={cx([styles.page__tabs, styles.tabs])}>\n                            {myPage.navTabs.map(item => (\n                                <Link\n                                    to={item.link}\n                                    className={cx([\n                                        styles.tab,\n                                        {\n                                            [styles.tab_active]: pathname === item.link,\n                                        },\n                                    ])}\n                                    key={item.text}\n                                >\n                                    <span>{item.text}</span>\n                                </Link>\n                            ))}\n                        </nav>\n                    )\n                }\n\n                {children}\n\n            </div>\n\n            {/* Mobile starts here */}\n\n            <div className={styles.mobile}>\n\n                <nav className={styles.mobTabs}>\n                    {LinksMenu.map(item => (\n                        <div className={styles.mobTab} key={item.title}>\n                            <input type=\"radio\" name=\"mobileTabs\" id={item.link} defaultChecked={item.link === mobSelectedTab} />\n                            <label\n                                className={cx([\n                                    styles.mobTab__title,\n                                    {\n                                        [styles.openedManually]: item.link === mobSelectedTab,\n                                    },\n                                ])}\n                                htmlFor={item.link}\n                                onClick={e => (pathname !== item.link\n                                    ? setTimeout(() =>\n                                        navigate(item.link, {\n                                            state: {\n                                                selectedPage: item.link,\n                                            },\n                                        }), 300)\n                                    : e.target.classList.add(styles.openedManually)\n                                )}\n                            >\n                                {item.title}\n                                <ArrDown />\n                            </label>\n                            <div className={styles.mobTab__content}>\n                                <div className={styles.mobTab__contentContainer}>\n                                    {\n                                        pathname === item.link && children\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </nav>\n\n            </div>\n        </div>\n    )\n}\n\nexport default StandartPageLayout\n","var React = require('react');\n\nfunction ChevronDownInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M8.57101 8.67094L15.7637 1.47581C16.0787 1.16009 16.0787 0.648579 15.7637 0.332065C15.4488 0.0163472 14.9373 0.0163472 14.6224 0.332065L8.00037 6.95648L1.37834 0.332863C1.06342 0.0171461 0.551907 0.0171461 0.23619 0.332863C-0.0787304 0.648581 -0.0787304 1.16089 0.23619 1.47661L7.42886 8.67173C7.74052 8.9826 8.26007 8.9826 8.57101 8.67094Z\",\"fill\":\"#0B2248\"}));\n}\n\nChevronDownInline.defaultProps = {\"width\":\"16\",\"height\":\"9\",\"viewBox\":\"0 0 16 9\",\"fill\":\"none\"};\n\nmodule.exports = ChevronDownInline;\n\nChevronDownInline.default = ChevronDownInline;\n","import React from 'react'\nimport styles from './Loader.module.scss'\n\nexport default function Loader() {\n    return (\n        <div className={styles.loader}>Загрузка... </div>\n    )\n}\n","import React from 'react'\nimport Loadable from 'react-loadable'\n\nimport Loader from '../Loader'\n\nimport './Table.scss'\n\n\nconst LoadableTable = Loadable({\n    loader: () => import('./Table'),\n    loading() {\n        return <Loader />\n    },\n    delay: 250,\n})\n\nconst TableComponent = props => (\n    <div className=\"TableContainer\">\n        <LoadableTable {...props} />\n    </div>\n)\n\nexport default TableComponent\n"],"sourceRoot":""}