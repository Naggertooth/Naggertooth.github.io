{"version":3,"sources":["webpack:///./src/components/common/Table/Table.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["connectedTable","connect","state","ownProps","table","tables","tableName","dispatch","connectTable","name","url","pages","sort","order","perPage","actions","default","getTable","_ref","columns","tableUrl","defaultPageSize","_useState","useState","loading","setLoading","_useState2","data","setData","_useState3","setPages","useEffect","result","defaultProps","showPagination","resizable","pageSizeOptions","previousText","nextText","loadingText","noDataText","pageText","ofText","rowsText","ThComponent","props","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Object","assign","children","className","onClick","style","title","filter","i","index","getTheadThProps","rowInfo","column","instance","sortable","sortColumn","manual","onFetchData","_onFetchData","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","sortArgs","wrap","_context","prev","next","sorted","id","desc","undefined","apply","page","concat","pageSize","stop","_x","this","arguments","react_table__WEBPACK_IMPORTED_MODULE_5__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","module","exports","fn","self","args","err"],"mappings":"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","file":"31-8fd147ecff45b8b96435.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactTable from 'react-table'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../redux/actions'\n\nimport './Table.scss'\n\nconst Table = ({\n    columns, tableName, tableUrl, table, connectTable, defaultPageSize,\n}) => {\n    const [loading, setLoading] = useState(true)\n    const [data, setData] = useState([])\n    const [pages, setPages] = useState(-1)\n\n    useEffect(() => {\n        if (typeof table !== 'undefined' && typeof table.data !== 'undefined') {\n            setData(table.data.result)\n            setPages(table.data.pages)\n            setLoading(false)\n        }\n    }, [table])\n\n    const defaultProps = {\n        showPagination: true,\n        resizable: true,\n        // showPageSizeOptions: false,\n        defaultPageSize: defaultPageSize || 5,\n        pageSizeOptions: [5, 20, 50, 100],\n        previousText: 'Назад',\n        nextText: 'Вперед',\n        loadingText: 'Загрузка данных...',\n        noDataText: 'Нет данных',\n        pageText: 'Страница',\n        ofText: 'из',\n        rowsText: 'Строк',\n        ThComponent: props => (\n            <div\n                {...{\n                    children: props.children,\n                    className: props.className,\n                    onClick: props.onClick,\n                    style: props.style,\n                    // eslint-disable-next-line max-len\n                    // togglesort: props.toggleSort, // react warning togglesort to lowercase please\n                }}\n                className={`rt-th ${props.className}`}\n            >\n                <div title={props.children[0].props.children} {...props.children[0].props}>\n                    {props.children[0].props.children}\n                </div>\n                {props.children.filter((i, index) => index !== 0)}\n            </div>\n        ), // something might not work, so comment this custom th for tests\n        getTheadThProps: (state, rowInfo, column, instance) => ({\n            onClick: () => {\n                if (column.sortable !== false) {\n                    instance.sortColumn(column)\n                }\n            },\n        }), // something might not work, so comment this custom th for tests\n\n        data,\n        pages,\n        loading,\n        manual: true, // this would indicate that server side pagination has been enabled\n        onFetchData: async (state) => {\n            setLoading(true)\n            const sortArgs = state.sorted[0]\n                ? [\n                    state.sorted[0].id,\n                    state.sorted[0].desc ? -1 : 1,\n                ]\n                : [undefined, undefined]\n            connectTable(\n                tableName,\n                tableUrl,\n                state.page + 1,\n                ...sortArgs,\n                state.pageSize,\n            )\n        },\n    }\n\n    return (\n        <ReactTable\n            columns={columns}\n            {...defaultProps}\n        />\n    )\n}\n\nconst connectedTable = connect(\n    (state, ownProps) => ({\n        table: state.tables[ownProps.tableName],\n    }),\n    dispatch => ({\n        connectTable: (name, url, pages, sort, order, perPage) =>\n            dispatch(actions.TableActions.default.getTable(name, url, pages, sort, order, perPage)),\n    }),\n)(Table)\n\nexport default connectedTable\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}