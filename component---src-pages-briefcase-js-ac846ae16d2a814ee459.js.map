{"version":3,"sources":["webpack:///./src/components/common/Table/index.js","webpack:///./src/pages/briefcase.js","webpack:///./src/components/layouts/StandartPageLayout/index.js","webpack:///./src/images/svgs/chevronDown.inline.svg","webpack:///./src/components/common/Loader/index.js","webpack:///./src/components/common/Graph/index.js"],"names":["connectedTable","connect","state","ownProps","table","tables","tableName","dispatch","connectTable","name","url","pages","sort","order","perPage","actions","default","getTable","_ref","columns","tableUrl","_useState","useState","loading","setLoading","_useState2","data","setData","_useState3","setPages","useEffect","result","defaultProps","showPagination","resizable","defaultPageSize","pageSizeOptions","manual","onFetchData","_onFetchData","asyncToGenerator_default","regenerator_default","a","mark","_callee","sortArgs","wrap","_context","prev","next","sorted","id","desc","undefined","apply","page","concat","pageSize","stop","_x","this","arguments","react_default","createElement","es","Object","assign","tableProps","Header","accessor","minResizeWidth","helpers","api","GET_ORDERS","BriefcasePage","location","Layout","Seo","title","keywords","StandartPageLayout","Graph","common_Table","children","pathname","mainPath","split","mobSelectedTab","selectedPage","LinksMenu","constants","links","myPage","find","item","link","header","icon","navTabs","react__WEBPACK_IMPORTED_MODULE_3___default","className","styles","desktop","page__title","cx","page__tabs","tabs","map","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","tab","tab_active","key","text","mobile","mobTabs","_ref3","mobTab","type","defaultChecked","mobTab__title","openedManually","htmlFor","onClick","e","setTimeout","navigate","target","classList","add","_images_svgs_chevronDown_inline_svg__WEBPACK_IMPORTED_MODULE_8___default","mobTab__content","mobTab__contentContainer","React","__webpack_require__","ChevronDownInline","props","d","fill","width","height","viewBox","module","exports","__webpack_exports__","Loader","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Loader_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Loader_module_scss__WEBPACK_IMPORTED_MODULE_1___default","loader","react_loadable__WEBPACK_IMPORTED_MODULE_1__","react_loadable__WEBPACK_IMPORTED_MODULE_1___default","_Graph_module_scss__WEBPACK_IMPORTED_MODULE_2__","_Graph_module_scss__WEBPACK_IMPORTED_MODULE_2___default","_Loader__WEBPACK_IMPORTED_MODULE_3__","LoadableGraph","Loadable","Promise","all","then","bind","delay","GraphComponent","graph"],"mappings":"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","file":"component---src-pages-briefcase-js-ac846ae16d2a814ee459.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactTable from 'react-table'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../redux/actions'\n\nimport './Table.scss'\n\nconst Table = ({\n    columns, tableName, tableUrl, table, connectTable,\n}) => {\n    const [loading, setLoading] = useState(true)\n    const [data, setData] = useState([])\n    const [pages, setPages] = useState(-1)\n\n    useEffect(() => {\n        if (typeof table !== 'undefined' && typeof table.data !== 'undefined') {\n            setData(table.data.result)\n            setPages(table.data.pages)\n            setLoading(false)\n        }\n    }, [table])\n\n    const defaultProps = {\n        showPagination: true,\n        resizable: true,\n        // showPageSizeOptions: false,\n        defaultPageSize: 5,\n        pageSizeOptions: [5, 20, 50, 100],\n\n        data,\n        pages,\n        loading,\n        manual: true, // this would indicate that server side pagination has been enabled\n        onFetchData: async (state) => {\n            setLoading(true)\n            const sortArgs = state.sorted[0]\n                ? [\n                    state.sorted[0].id,\n                    state.sorted[0].desc ? -1 : 1,\n                ]\n                : [undefined, undefined]\n            connectTable(\n                tableName,\n                tableUrl,\n                state.page + 1,\n                ...sortArgs,\n                state.pageSize,\n            )\n        },\n    }\n\n    return (\n        <ReactTable\n            columns={columns}\n            {...defaultProps}\n        />\n    )\n}\n\nconst connectedTable = connect(\n    (state, ownProps) => ({\n        table: state.tables[ownProps.tableName],\n    }),\n    dispatch => ({\n        connectTable: (name, url, pages, sort, order, perPage) =>\n            dispatch(actions.TableActions.default.getTable(name, url, pages, sort, order, perPage)),\n    }),\n)(Table)\n\nexport default connectedTable\n","import React from 'react'\r\n\r\nimport Layout from '../components/layouts/Layout'\r\nimport StandartPageLayout from '../components/layouts/StandartPageLayout'\r\nimport SEO from '../components/Seo'\r\n\r\nimport Graph from '../components/common/Graph'\r\nimport Table from '../components/common/Table'\r\n\r\nimport helpers from '../helpers'\r\n\r\nconst columns = [\r\n    {\r\n        Header: 'Идентификационный номер',\r\n        accessor: 'OrderNum', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Код класса инструментов',\r\n        accessor: 'ClassCode', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Код инструмента',\r\n        accessor: 'SecCode', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Код биржи',\r\n        accessor: 'ExchangeCode', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Код клиента',\r\n        accessor: 'ClientCode', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Цена за одну ценную бумагу',\r\n        accessor: 'Price', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Количество ценных бумаг в лотах',\r\n        accessor: 'Qty', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Количество ценных бумаг в штуках',\r\n        accessor: 'Qty_pcs', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Торговый счет',\r\n        accessor: 'Account', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Комментарий',\r\n        accessor: 'BrokerRef', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Тип операции',\r\n        accessor: 'Operation', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n    {\r\n        Header: 'Состояние заявки',\r\n        accessor: 'State', // String-based value accessors!\r\n        minResizeWidth: 10,\r\n    },\r\n]\r\n\r\nconst tableProps = {\r\n    columns,\r\n    tableUrl: helpers.api.GET_ORDERS,\r\n    tableName: 'Orders',\r\n}\r\n\r\nconst BriefcasePage = ({ location }) => (\r\n    <Layout location={location}>\r\n        <SEO title=\"Портфель\" keywords={['gatsby', 'application', 'react']} />\r\n        <StandartPageLayout location={location}>\r\n            <Graph />\r\n            <Table {...tableProps} />\r\n        </StandartPageLayout>\r\n    </Layout>\r\n)\r\n\r\nexport default BriefcasePage\r\n","import React from 'react'\nimport { Link, navigate } from 'gatsby'\nimport cx from 'classnames'\n\nimport styles from './StandartPage.module.scss'\n\nimport helpers from '../../../helpers'\n\nimport ArrDown from '../../../images/svgs/chevronDown.inline.svg'\n\n\nfunction StandartPageLayout({ children, location }) {\n    const pathname = location ? location.pathname : '/404/'\n    const mainPath = location ? `/${location.pathname.split('/')[1]}/` : '/404/'\n    const mobSelectedTab = location.state ? location.state.selectedPage : ''\n    const { LinksMenu } = helpers.constants.links\n    const myPage = LinksMenu.find(item => item.link === mainPath) || {\n        header: 'Not found',\n        icon: '',\n        link: '/404/',\n        navTabs: [],\n    }\n\n    return (\n        <div className={styles.page}>\n\n            <div className={styles.desktop}>\n\n                <h1 className={styles.page__title}>\n                    {myPage.icon}\n                    {myPage.header}\n                </h1>\n\n                {\n                    myPage.navTabs && (\n                        <nav className={cx([styles.page__tabs, styles.tabs])}>\n                            {myPage.navTabs.map(item => (\n                                <Link\n                                    to={item.link}\n                                    className={cx([\n                                        styles.tab,\n                                        {\n                                            [styles.tab_active]: pathname === item.link,\n                                        },\n                                    ])}\n                                    key={item.text}\n                                >\n                                    <span>{item.text}</span>\n                                </Link>\n                            ))}\n                        </nav>\n                    )\n                }\n\n                {children}\n\n            </div>\n\n            {/* Mobile starts here */}\n\n            <div className={styles.mobile}>\n\n                <nav className={styles.mobTabs}>\n                    {LinksMenu.map(item => (\n                        <div className={styles.mobTab} key={item.title}>\n                            <input type=\"radio\" name=\"mobileTabs\" id={item.link} defaultChecked={item.link === mobSelectedTab} />\n                            <label\n                                className={cx([\n                                    styles.mobTab__title,\n                                    {\n                                        [styles.openedManually]: item.link === mobSelectedTab,\n                                    },\n                                ])}\n                                htmlFor={item.link}\n                                onClick={e => (pathname !== item.link\n                                    ? setTimeout(() =>\n                                        navigate(item.link, {\n                                            state: {\n                                                selectedPage: item.link,\n                                            },\n                                        }), 300)\n                                    : e.target.classList.add(styles.openedManually)\n                                )}\n                            >\n                                {item.title}\n                                <ArrDown />\n                            </label>\n                            <div className={styles.mobTab__content}>\n                                <div className={styles.mobTab__contentContainer}>\n                                    {\n                                        pathname === item.link && children\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </nav>\n\n            </div>\n        </div>\n    )\n}\n\nexport default StandartPageLayout\n","var React = require('react');\n\nfunction ChevronDownInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M8.57101 8.67094L15.7637 1.47581C16.0787 1.16009 16.0787 0.648579 15.7637 0.332065C15.4488 0.0163472 14.9373 0.0163472 14.6224 0.332065L8.00037 6.95648L1.37834 0.332863C1.06342 0.0171461 0.551907 0.0171461 0.23619 0.332863C-0.0787304 0.648581 -0.0787304 1.16089 0.23619 1.47661L7.42886 8.67173C7.74052 8.9826 8.26007 8.9826 8.57101 8.67094Z\",\"fill\":\"#0B2248\"}));\n}\n\nChevronDownInline.defaultProps = {\"width\":\"16\",\"height\":\"9\",\"viewBox\":\"0 0 16 9\",\"fill\":\"none\"};\n\nmodule.exports = ChevronDownInline;\n\nChevronDownInline.default = ChevronDownInline;\n","import React from 'react'\nimport styles from './Loader.module.scss'\n\nexport default function Loader() {\n    return (\n        <div className={styles.loader}>Loading... </div>\n    )\n}\n","import React from 'react'\nimport Loadable from 'react-loadable'\n\nimport styles from './Graph.module.scss'\n\nimport Loader from '../Loader'\n\n\nconst LoadableGraph = Loadable({\n    loader: () => import('./graph'),\n    loading() {\n        return <Loader />\n    },\n    delay: 50,\n})\n\nconst GraphComponent = () => (\n    <div className={styles.graph}>\n        <LoadableGraph />\n    </div>\n)\n\nexport default GraphComponent\n"],"sourceRoot":""}