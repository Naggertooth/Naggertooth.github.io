{"version":3,"sources":["webpack:///./src/components/common/Currencyes/Graph.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_plotly_js__WEBPACK_IMPORTED_MODULE_1__","react_plotly_js__WEBPACK_IMPORTED_MODULE_1___default","bignumber_js__WEBPACK_IMPORTED_MODULE_2__","bignumber_js__WEBPACK_IMPORTED_MODULE_2___default","moment__WEBPACK_IMPORTED_MODULE_3__","moment__WEBPACK_IMPORTED_MODULE_3___default","MyPlot","_ref","data","result","suffix","x","map","i","moment","format","trace","open","BigNumber","toNumber","close","high","low","type","xaxis","yaxis","a","createElement","layout","ticksuffix","toUpperCase","range","rangeslider","visible","tickformat","useResizeHandler","style","width","height"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAAK,EAAAG,GAAAE,EAAAV,EAAA,IAAAW,EAAAX,EAAAK,EAAAK,GAgDeE,UA3CA,SAAAC,GAAwC,IAArBC,EAAqBD,EAArCC,KAAQC,OAAgBC,EAAaH,EAAbG,OAEhCC,EAAIH,EAAKI,IAAI,SAAAC,GAAC,OAAIC,IAAOD,EAAE,UAAW,YAAYE,OAAO,gBAKzDC,EAAQ,CACVL,IACAM,KANST,EAAKI,IAAI,SAAAC,GAAC,OAAIK,IAAUL,EAAE,WAAWM,aAO9CC,MANUZ,EAAKI,IAAI,SAAAC,GAAC,OAAIK,IAAUL,EAAE,YAAYM,aAOhDE,KANSb,EAAKI,IAAI,SAAAC,GAAC,OAAIK,IAAUL,EAAE,WAAWM,aAO9CG,IANQd,EAAKI,IAAI,SAAAC,GAAC,OAAIK,IAAUL,EAAE,UAAUM,aAO5CI,KAAM,cACNC,MAAO,IACPC,MAAO,KAGX,OACI3B,EAAA4B,EAAAC,cAAC1B,EAAAyB,EAAD,CACIlB,KAAM,CACFQ,GAEJY,OAAQ,CACJH,MAAO,CACHI,WAAU,IAAMnB,EAAOoB,eAE3BN,MAAO,CACHD,KAAM,OACNQ,MAAOpB,EAEPqB,YAAa,CACTC,SAAS,GAEbC,WAAY,eAGpBC,kBAAgB,EAChBC,MAAO,CAAEC,MAAO,OAAQC,OAAQ","file":"7-f9f4e199b249cf2b1b49.js","sourcesContent":["import React from 'react'\r\nimport Plot from 'react-plotly.js'\r\nimport BigNumber from 'bignumber.js'\r\nimport moment from 'moment'\r\n\r\nconst MyPlot = ({ data: { result: data }, suffix }) => {\r\n    // <DATE>,<TIME>,<OPEN>,<HIGH>,<LOW>,<CLOSE>,<VOL>\r\n    const x = data.map(i => moment(i['<DATE>'], 'DD/MM/YY').format('YYYY-MM-DD'))\r\n    const open = data.map(i => BigNumber(i['<OPEN>']).toNumber())\r\n    const close = data.map(i => BigNumber(i['<CLOSE>']).toNumber())\r\n    const high = data.map(i => BigNumber(i['<HIGH>']).toNumber())\r\n    const low = data.map(i => BigNumber(i['<LOW>']).toNumber())\r\n    const trace = {\r\n        x,\r\n        open,\r\n        close,\r\n        high,\r\n        low,\r\n        type: 'candlestick',\r\n        xaxis: 'x',\r\n        yaxis: 'y',\r\n    }\r\n\r\n    return (\r\n        <Plot\r\n            data={[\r\n                trace,\r\n            ]}\r\n            layout={{\r\n                yaxis: {\r\n                    ticksuffix: ` ${suffix.toUpperCase()}`,\r\n                },\r\n                xaxis: {\r\n                    type: 'date',\r\n                    range: x,\r\n                    // rangeslider: { range: x },\r\n                    rangeslider: {\r\n                        visible: false,\r\n                    },\r\n                    tickformat: '%d %b\\n %Y',\r\n                },\r\n            }}\r\n            useResizeHandler\r\n            style={{ width: '100%', height: '80vh' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MyPlot\r\n"],"sourceRoot":""}