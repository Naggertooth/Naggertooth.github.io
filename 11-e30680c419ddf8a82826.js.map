{"version":3,"sources":["webpack:///./src/components/common/Graph/Plot/index.js","webpack:///./src/components/common/Graph/Calendar/index.js","webpack:///./src/assets/stub.js","webpack:///./src/components/common/Graph/graph.js"],"names":["MyPlot","_ref","data","oX","timelines","oY","values","react_default","a","createElement","react_plotly_default","x","y","type","mode","marker","color","layout","title","xaxis","tickformat","Graph","_useState","useState","moment","dates","setDates","es","selected","toDate","onChange","date","timeIntervals","timeCaption","client","2018.12.07_20-03-38","2018.12.10_17-03-07","2018.12.10_20-03-06","2019.01.10_17-03-23","2019.01.10_20-03-20","2019.02.11_17-03-16","2019.02.11_20-03-55","Object","keys","map","i","format","item","reduce","Plot","Calendar"],"mappings":"0LA4BeA,EAzBA,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACRC,EAAKD,EAAKE,UACVC,EAAKH,EAAKI,OAEhB,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIN,KAAM,CACF,CACIS,EAAGR,EACHS,EAAGP,EACHQ,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEC,MAAO,SAGzBC,OAAQ,CACJC,MAAO,OACPC,MAAO,CACHC,WAAY,2BC8BjBC,UA7CD,WAAM,IAAAC,EACUC,mBAASC,OAA5BC,EADSH,EAAA,GACFI,EADEJ,EAAA,GAGhB,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIC,SAAUH,EAAMI,SAChBC,SAAU,SAAAC,GAAI,OAAIL,EAASF,IAAOO,KAClCC,cAAe,GACfC,YAAY,YC8BbC,EA7CA,CACXC,sBAAuB,CACnB,UACA,YACA,YACA,aAEJC,sBAAuB,CACnB,YACA,YACA,YACA,aAEJC,sBAAuB,CACnB,YACA,YACA,YACA,aAEJC,sBAAuB,CACnB,UACA,YACA,YACA,aAEJC,sBAAuB,CACnB,YACA,YACA,YACA,aAEJC,sBAAuB,CACnB,YACA,WACA,YACA,aAEJC,sBAAuB,CACnB,YACA,YACA,YACA,cChBOpB,UAjBD,WACV,IAGMnB,EAAO,CACTE,UAJOsC,OAAOC,KAAKT,GAAQU,IAAI,SAAAC,GAAC,OAAIrB,IAAOqB,EAAG,uBAAuBC,OAAO,yBAK5ExC,OAJOoC,OAAOpC,OAAO4B,GAAQU,IAAI,SAAAG,GAAI,OAAIA,EAAKC,OAAO,SAACxC,EAAGqC,GAAJ,OAAUrC,EAAIqC,GAAG,MAO1E,OACItC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwC,EAAD,CAAM/C,KAAMA,IACZK,EAAAC,EAAAC,cAACyC,EAAD","file":"11-e30680c419ddf8a82826.js","sourcesContent":["import React from 'react'\nimport Plot from 'react-plotly.js'\n\nconst MyPlot = ({ data }) => {\n    const oX = data.timelines\n    const oY = data.values\n\n    return (\n        <Plot\n            data={[\n                {\n                    x: oX,\n                    y: oY,\n                    type: 'scatter',\n                    mode: 'lines+markers',\n                    marker: { color: 'red' },\n                },\n            ]}\n            layout={{\n                title: 'Test',\n                xaxis: {\n                    tickformat: '%d %b\\n %Y',\n                },\n            }}\n        />\n    )\n}\n\nexport default MyPlot\n","import React, { useState } from 'react'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst Graph = () => {\n    const [dates, setDates] = useState(moment())\n\n    return (\n        <div>\n            <DatePicker\n                selected={dates.toDate()}\n                onChange={date => setDates(moment(date))}\n                timeIntervals={15}\n                timeCaption=\"time\"\n            />\n            {/* <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n            />\n            <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n                excludeDates={[new Date(), subDays(new Date(), 1)]}\n                placeholderText=\"Select a date other than today or yesterday\" /> */}\n\n            {/* <DatePicker\n                selected={this.state.startDate}\n                selectsStart\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                onChange={this.handleChangeStart}\n            />\n\n            <DatePicker\n                selected={this.state.endDate}\n                selectsEnd\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                onChange={this.handleChangeEnd}\n            /> */}\n        </div>\n    )\n}\n\nexport default Graph\n","const client = {\n    '2018.12.07_20-03-38': [\n        336235641,\n        497134.5653,\n        11207927.06,\n        128499775.9,\n    ],\n    '2018.12.10_17-03-07': [\n        337014136.9,\n        467643.6154,\n        31142771.46,\n        126514907.9,\n    ],\n    '2018.12.10_20-03-06': [\n        336091433.4,\n        467906.9171,\n        164014354.2,\n        126514907.9,\n    ],\n    '2019.01.10_17-03-23': [\n        340510909,\n        153397.2629,\n        416853910.8,\n        128587527.6,\n    ],\n    '2019.01.10_20-03-20': [\n        339774224.6,\n        153289.6844,\n        412928419.5,\n        128587527.6,\n    ],\n    '2019.02.11_17-03-16': [\n        321691334.3,\n        221477.922,\n        545883833.1,\n        133743237.6,\n    ],\n    '2019.02.11_20-03-55': [\n        322960130.8,\n        221917.8404,\n        543112304.6,\n        133743237.6,\n    ],\n}\n\nexport default client\n","import React from 'react'\nimport moment from 'moment'\n\nimport Plot from './Plot'\nimport Calendar from './Calendar'\nimport client from '../../../assets/stub'\n\n\nconst Graph = () => {\n    const oX = Object.keys(client).map(i => moment(i, 'YYYY.MM.DD_HH-mm-ss').format('YYYY-MM-DDTHH:mm:ss'))\n    const oY = Object.values(client).map(item => item.reduce((a, i) => a + i, 0))\n\n    const data = {\n        timelines: oX,\n        values: oY,\n    }\n\n    return (\n        <div>\n            <Plot data={data} />\n            <Calendar />\n        </div>\n    )\n}\n\nexport default Graph\n"],"sourceRoot":""}