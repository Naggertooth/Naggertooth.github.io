{"version":3,"sources":["webpack:///./src/pages/service/withdrawal_order.js","webpack:///./src/components/layouts/StandartPageLayout/index.js","webpack:///./src/images/svgs/chevronDown.inline.svg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_StandartPageLayout__WEBPACK_IMPORTED_MODULE_2__","_components_Seo__WEBPACK_IMPORTED_MODULE_3__","_components_common_Widgets_MainWidget__WEBPACK_IMPORTED_MODULE_4__","WithdrawalOrderPage","_ref","location","a","createElement","title","keywords","mobile","StandartPageLayout","children","pathname","mainPath","split","mobSelectedTab","state","selectedPage","LinksMenu","helpers","constants","links","myPage","find","item","link","header","icon","navTabs","react__WEBPACK_IMPORTED_MODULE_3___default","className","styles","page","desktop","page__title","cx","page__tabs","tabs","map","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","tab","tab_active","key","text","mobTabs","_ref3","mobTab","type","name","id","defaultChecked","mobTab__title","openedManually","htmlFor","onClick","e","setTimeout","navigate","target","classList","add","_images_svgs_chevronDown_inline_svg__WEBPACK_IMPORTED_MODULE_8___default","mobTab__content","mobTab__contentContainer","React","ChevronDownInline","props","d","fill","defaultProps","width","height","viewBox","module","exports","default"],"mappings":"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","file":"component---src-pages-service-withdrawal-order-js-4ea67b4234730a3e4852.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../components/layouts/Layout'\nimport StandartPageLayout from '../../components/layouts/StandartPageLayout'\nimport SEO from '../../components/Seo'\n\nimport MainWidget from '../../components/common/Widgets/MainWidget'\n\nconst WithdrawalOrderPage = ({ location }) => (\n    <Layout location={location}>\n        <SEO title=\"Поручение на вывод\" keywords={['gatsby', 'application', 'react']} />\n        <StandartPageLayout location={location}>\n            <MainWidget location={location} mobile />\n            <br />\n            Under Maintance\n        </StandartPageLayout>\n    </Layout>\n)\n\nexport default WithdrawalOrderPage\n","import React from 'react'\nimport { Link, navigate } from 'gatsby'\nimport cx from 'classnames'\n\nimport styles from './StandartPage.module.scss'\n\nimport helpers from '../../../helpers'\n\nimport ArrDown from '../../../images/svgs/chevronDown.inline.svg'\n\n\nfunction StandartPageLayout({ children, location }) {\n    const pathname = location ? location.pathname : '/404/'\n    const mainPath = location ? `/${location.pathname.split('/')[1]}/` : '/404/'\n    const mobSelectedTab = location.state ? location.state.selectedPage : ''\n    const { LinksMenu } = helpers.constants.links\n    const myPage = LinksMenu.find(item => item.link === mainPath)\n        || LinksMenu.find(item => `/${item.link.split('/')[1]}/` === mainPath)\n        || LinksMenu.find(item => item.link === pathname)\n        || {\n            header: 'Not found',\n            icon: '',\n            link: '/404/',\n            navTabs: [],\n        }\n\n    return (\n        <div className={styles.page}>\n\n            <div className={styles.desktop}>\n\n                <h1 className={styles.page__title}>\n                    {myPage.icon}\n                    {myPage.header}\n                </h1>\n\n                {\n                    myPage.navTabs && (\n                        <nav className={cx([styles.page__tabs, styles.tabs])}>\n                            {myPage.navTabs.map(item => (\n                                <Link\n                                    to={item.link}\n                                    className={cx([\n                                        styles.tab,\n                                        {\n                                            [styles.tab_active]: pathname === item.link,\n                                        },\n                                    ])}\n                                    key={item.text}\n                                >\n                                    <span>{item.text}</span>\n                                </Link>\n                            ))}\n                        </nav>\n                    )\n                }\n\n                {children}\n\n            </div>\n\n            {/* Mobile starts here */}\n\n            <div className={styles.mobile}>\n\n                <nav className={styles.mobTabs}>\n                    {LinksMenu.map(item => (\n                        <div className={styles.mobTab} key={item.title}>\n                            <input type=\"radio\" name=\"mobileTabs\" id={item.link} defaultChecked={item.link === mobSelectedTab} />\n                            <label\n                                className={cx([\n                                    styles.mobTab__title,\n                                    {\n                                        [styles.openedManually]: item.link === mobSelectedTab,\n                                    },\n                                ])}\n                                htmlFor={item.link}\n                                onClick={e => (pathname !== item.link\n                                    ? setTimeout(() =>\n                                        navigate(item.link, {\n                                            state: {\n                                                selectedPage: item.link,\n                                            },\n                                        }), 300)\n                                    : e.target.classList.add(styles.openedManually)\n                                )}\n                            >\n                                {item.title}\n                                <ArrDown />\n                            </label>\n                            <div className={styles.mobTab__content}>\n                                <div className={styles.mobTab__contentContainer}>\n                                    {\n                                        pathname === item.link && children\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </nav>\n\n            </div>\n        </div>\n    )\n}\n\nexport default StandartPageLayout\n","var React = require('react');\n\nfunction ChevronDownInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M8.57101 8.67094L15.7637 1.47581C16.0787 1.16009 16.0787 0.648579 15.7637 0.332065C15.4488 0.0163472 14.9373 0.0163472 14.6224 0.332065L8.00037 6.95648L1.37834 0.332863C1.06342 0.0171461 0.551907 0.0171461 0.23619 0.332863C-0.0787304 0.648581 -0.0787304 1.16089 0.23619 1.47661L7.42886 8.67173C7.74052 8.9826 8.26007 8.9826 8.57101 8.67094Z\",\"fill\":\"#0B2248\"}));\n}\n\nChevronDownInline.defaultProps = {\"width\":\"16\",\"height\":\"9\",\"viewBox\":\"0 0 16 9\",\"fill\":\"none\"};\n\nmodule.exports = ChevronDownInline;\n\nChevronDownInline.default = ChevronDownInline;\n"],"sourceRoot":""}